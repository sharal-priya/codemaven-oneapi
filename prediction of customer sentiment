import onednn as dnn
import onemkl as mkl
import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score
from tensorflow.keras import Sequential
from tensorflow.keras.layers import Dense, Dropout

# Load data
data = pd.read_csv('social_media_data.csv')

# Preprocess data
# text cleaning, tokenization, stop-word removal, stemming, and lemmatization
# ...

# Feature Extraction
vectorizer = TfidfVectorizer()
X = vectorizer.fit_transform(data['text']).toarray()
y = data['sentiment'].values

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Build the model
model = Sequential()
model.add(Dense(64, input_dim=X_train.shape[1], activation='relu'))
model.add(Dropout(0.2))
model.add(Dense(32, activation='relu'))
model.add(Dropout(0.2))
model.add(Dense(1, activation='sigmoid'))

# Train the model
model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])
with mkl.mkl_enable():
    model.fit(X_train, y_train, epochs=10, batch_size=32, verbose=1)

# Evaluate the model
y_pred = model.predict_classes(X_test)
print('Accuracy: ', accuracy_score(y_test, y_pred))
print('Precision: ', precision_score(y_test, y_pred))
print('Recall: ', recall_score(y_test, y_pred))
print('F1-Score: ', f1_score(y_test, y_pred))
